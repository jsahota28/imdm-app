{"ast":null,"code":"var _jsxFileName = \"/Users/jaskaransahota/Downloads/imdm_app/frontend/src/components/NearbyTheaters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NearbyTheaters() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      console.log(\"User location:\", latitude, longitude); // Optional debug\n\n      axios.get(\"https://api.themoviedb.org/3/movie/now_playing\", {\n        params: {\n          api_key: \"485cf1e763eb302fb\",\n          // your TMDB key\n          language: \"en-US\",\n          region: \"US\",\n          // You can change this to auto-detect later\n          page: 1\n        }\n      }).then(res => setMovies(res.data.results)).catch(err => {\n        console.error(\"Error fetching TMDB data:\", err);\n        setError(\"Could not fetch nearby movies.\");\n      });\n    }, err => {\n      console.error(\"Geolocation error:\", err);\n      setError(\"Location access denied.\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Now Playing Movies Near You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          width: \"200px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n          alt: movie.title,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(NearbyTheaters, \"UQIz3DUAsscPOxpy0EBLqNrQOgQ=\");\n_c = NearbyTheaters;\nexport default NearbyTheaters;\nvar _c;\n$RefreshReg$(_c, \"NearbyTheaters\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","NearbyTheaters","_s","movies","setMovies","error","setError","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","get","params","api_key","language","region","page","then","res","data","results","catch","err","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","map","movie","margin","width","src","poster_path","alt","title","release_date","id","_c","$RefreshReg$"],"sources":["/Users/jaskaransahota/Downloads/imdm_app/frontend/src/components/NearbyTheaters.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction NearbyTheaters() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        console.log(\"User location:\", latitude, longitude); // Optional debug\n\n        axios\n          .get(\"https://api.themoviedb.org/3/movie/now_playing\", {\n            params: {\n              api_key: \"485cf1e763eb302fb\", // your TMDB key\n              language: \"en-US\",\n              region: \"US\", // You can change this to auto-detect later\n              page: 1,\n            },\n          })\n          .then((res) => setMovies(res.data.results))\n          .catch((err) => {\n            console.error(\"Error fetching TMDB data:\", err);\n            setError(\"Could not fetch nearby movies.\");\n          });\n      },\n      (err) => {\n        console.error(\"Geolocation error:\", err);\n        setError(\"Location access denied.\");\n      }\n    );\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Now Playing Movies Near You</h2>\n      {error && <p>{error}</p>}\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {movies.map((movie) => (\n          <div key={movie.id} style={{ margin: \"10px\", width: \"200px\" }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n              alt={movie.title}\n              style={{ width: \"100%\" }}\n            />\n            <h4>{movie.title}</h4>\n            <p>Release Date: {movie.release_date}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default NearbyTheaters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}