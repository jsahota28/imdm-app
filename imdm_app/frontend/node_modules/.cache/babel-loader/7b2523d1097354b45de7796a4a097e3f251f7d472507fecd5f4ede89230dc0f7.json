{"ast":null,"code":"var _jsxFileName = \"/Users/jaskaransahota/Downloads/imdm_app/frontend/src/components/TVShows.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TVShows() {\n  _s();\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://api.themoviedb.org/3/trending/tv/week?api_key=YOUR_TMDB_API_KEY\").then(res => setShows(res.data.results)).catch(err => console.error(\"Failed to fetch shows\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trending TV Shows This Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: shows.map(show => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          width: \"200px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${show.poster_path}`,\n          alt: show.name,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: show.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", show.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(TVShows, \"lt4sKoljhgDY9nzMRkpzzWWHEHs=\");\n_c = TVShows;\nexport default TVShows;\nvar _c;\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TVShows","_s","shows","setShows","get","then","res","data","results","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","map","show","margin","width","src","poster_path","alt","name","vote_average","id","_c","$RefreshReg$"],"sources":["/Users/jaskaransahota/Downloads/imdm_app/frontend/src/components/TVShows.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction TVShows() {\n  const [shows, setShows] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"https://api.themoviedb.org/3/trending/tv/week?api_key=YOUR_TMDB_API_KEY\")\n      .then((res) => setShows(res.data.results))\n      .catch((err) => console.error(\"Failed to fetch shows\", err));\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Trending TV Shows This Week</h2>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {shows.map((show) => (\n          <div key={show.id} style={{ margin: \"10px\", width: \"200px\" }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${show.poster_path}`}\n              alt={show.name}\n              style={{ width: \"100%\" }}\n            />\n            <h4>{show.name}</h4>\n            <p>Rating: {show.vote_average}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TVShows;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAC,yEAAyE,CAAC,CACjFC,IAAI,CAAEC,GAAG,IAAKH,QAAQ,CAACG,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CACzCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCpB,OAAA;MAAKc,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAN,QAAA,EAC/Cb,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACdxB,OAAA;QAAmBc,KAAK,EAAE;UAAEW,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAV,QAAA,gBAC3DhB,OAAA;UACE2B,GAAG,EAAE,kCAAkCH,IAAI,CAACI,WAAW,EAAG;UAC1DC,GAAG,EAAEL,IAAI,CAACM,IAAK;UACfhB,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAO;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFpB,OAAA;UAAAgB,QAAA,EAAKQ,IAAI,CAACM;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBpB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACQ,IAAI,CAACO,YAAY;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAP1BI,IAAI,CAACQ,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA3BQD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AA6BhB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}